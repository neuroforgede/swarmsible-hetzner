- name: Create a basic Load Balancer
  hetzner.hcloud.hcloud_load_balancer:
    api_token: "{{ hcloud_token }}"
    name: "swarmlb"
    load_balancer_type: "{{ swarm_lb_type }}"
    location: "{{ server_location }}"
    state: present

- name: "Add swarmlb to {{ hetzner_swarm_network_name }}"
  hetzner.hcloud.hcloud_load_balancer_network:
    api_token: "{{ hcloud_token }}"
    network: "{{ hetzner_swarm_network_name }}"
    load_balancer: "swarmlb"
    ip: 192.168.0.2
    state: present

- name: Add swarm manager nodes to load balancer
  hetzner.hcloud.hcloud_load_balancer_target:
    api_token: "{{ hcloud_token }}"
    type: label_selector
    load_balancer: "swarmlb"
    label_selector: swarm_role=manager
    use_private_ip: true
    state: present
  when: "managers_part_of_lb | bool"

- name: Add swarm worker nodes to load balancer
  hetzner.hcloud.hcloud_load_balancer_target:
    api_token: "{{ hcloud_token }}"
    type: label_selector
    load_balancer: "swarmlb"
    label_selector: swarm_role=worker
    use_private_ip: true
    state: present
  when: "managers_part_of_lb | bool"

- name: Create a basic certificate
  hetzner.hcloud.hcloud_certificate:
    name: "{{ swarm_lb_certificate_name }}"
    api_token: "{{ hcloud_token }}"
    domain_names: "{{ swarm_lb_certificate_domain_names }}"
    state: present
    type: 'managed'
  when: "swarm_lb_certificate_type == 'managed'"

- name: Create a basic Load Balancer service with Port 443
  hetzner.hcloud.hcloud_load_balancer_service:
    api_token: "{{ hcloud_token }}"
    load_balancer: "swarmlb"
    protocol: https
    listen_port: 443
    state: present
    health_check:
      http:
        status_codes:
          # 404 as we dont specify a hostname - traefik will respond with a 404
          - "404"
        tls: no
    http:
      redirect_http: true
      certificates:
        - "{{ swarm_lb_certificate_name }}"